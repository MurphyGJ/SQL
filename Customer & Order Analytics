/* In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. */

#1. How many orders were placed in January? 

SELECT Count(orderid) 
FROM BIT_DB.jansales;

#2. How many of those orders were for an iPhone? 

SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE Product = "iPhone";

#3. Select the customer account numbers for all the orders that were placed in February. 

SELECT acctnum
FROM BIT_DB.customers cust

INNER JOIN BIT_DB.FebSales Feb
ON cust.order_id=FEB.orderid;

#4. Which product was the cheapest one sold in January, and what was the price? 

SELECT DISTINCT MIN(price), product 
FROM BIT_DB.JanSales;

SELECT product, quantity 
FROM BIT_DB.JanSales;

#5. What is the total revenue for each product sold in January?

SELECT SUM(product*quantity) 
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product, SUM(quanity), SUM(price*quantity) 
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 

SELECT COUNT(cust.acctnum), avg(quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON Febsales.orderid = customers.orders_id
WHERE Febsales.Quantity > 2;

#8. List all the products sold in Los Angeles in February and include how many of each were sold.

SELECT product, SUM(quantity) FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

#9. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT orderid, SUM(quantity), location FROM BIT_DB.JanSales
WHERE location LIKE '%New YorK%'
GROUP BY location
HAVING COUNT(orderID) > 2;

#10.	How many of each type of headphone were sold in February?

SELECT product, SUM(quantity) FROM BIT_DB.FebSales
WHERE product LIKE '%headphone%'
GROUP BY product;

