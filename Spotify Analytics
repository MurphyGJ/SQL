# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Create Table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

# First I wanted to see the data

SELECT * FROM BIT_DB.Spotifydata;

## Then I answered the following questions about the data ##

# Which artists are in the data set?

SELECT DISTINCT artist_name FROM BIT_DB.Spotifydata;

# What is the average tempo?

SELECT AVG(tempo) FROM BIT_DB.Spotifydata;

# How many tracks does each artist have?

SELECT artist_name, COUNT(track_name) FROM BIT_DB.Spotifydata
GROUP BY artist_name;

# Which track has the longest duration?

SELECT track_name, MAX(duration_ms) FROM BIT_DB.Spotifydata;

# Which track has the highest tempo?

SELECT track_name, MAX(tempo) FROM BIT_DB.Spotifydata;

# How long is the total duration of the entire data set?

SELECT SUM(duration_ms) FROM BIT_DB.Spotifydata;

# What is the most common key?

SELECT key, COUNT(key) AS key_occurence FROM BIT_DB.Spotifydata
GROUP BY key
ORDER BY key_occurence DESC;
